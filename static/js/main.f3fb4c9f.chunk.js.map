{"version":3,"sources":["containers/header/Header.js","redux/actions/action-creators.js","redux/actions/action-types.js","components/Loader/Loader.js","containers/NotesContainer/OneNote/OneNote.js","containers/NotesContainer/OneNote/OneNoteAdder/OneNoteAdder.js","containers/NotesContainer/NotesContainer.js","App.js","serviceWorker.js","redux/notesReducer.js","redux/rootReducer.js","index.js","containers/NotesContainer/NotesContainer.module.css"],"names":["Header","className","href","_baseUrl","fetchNotes","dispatch","a","fetchNotesStart","notes","axios","get","then","response","key","data","unshift","id","length","fetchNotesOk","fetchNotesError","type","error","Loader","OneNote","note","onDelete","editingModeFinish","color","putEditNote","setNewColor","useState","showColors","setShowColors","colorPick","setColorPick","console","log","title","editedNote","setEditedNote","changeColor","choosenColor","newData","useEffect","onChange","e","target","value","defaultValue","onBlur","preventDefault","Data","onClick","OneNoteAdder","addNote","textNote","setTextNote","submitHandler","trim","onSubmit","placeholder","autoFocus","NotesContainer","componentDidMount","props","adder","editingModeStart","style","notescontainer","this","editMode","loading","map","Math","random","deleteNote","React","Component","connect","state","delete","post","put","App","Boolean","window","location","hostname","match","initialState","newNote","combineReducers","action","form","formReducer","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","rootReducer","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.f3fb4c9f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <div className=\"navbar-brand\">\r\n                Noted it?\r\n            </div>\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#\">EN</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#\">RU</a>\r\n                </li>\r\n            </ul>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import { FETCHING_NOTES, FETCHING_OK, FETCHING_ERROR, ADD_NOTE, DELETE_NOTE, EDIT_MODE_START, EDIT_MODE_FINISH, EDIT_NOTE } from \"./action-types\"\r\nimport axios from \"axios\"\r\n\r\nconst _baseUrl = `https://notes-task-aa80d.firebaseio.com`\r\n\r\nexport function fetchNotes() {\r\n    return async dispatch => {\r\n        dispatch(fetchNotesStart())\r\n        try {\r\n            const notes = []\r\n            await axios.get(`${_baseUrl}/notes.json`)\r\n            .then(response => {\r\n                for (let key in response.data) {\r\n                    notes.unshift(\r\n                    {\r\n                        ...response.data[key],\r\n                        id: key\r\n                    }\r\n                    )\r\n                }\r\n            })\r\n            \r\n            if (notes.length === 0) {\r\n                return \r\n            }\r\n            dispatch(fetchNotesOk(notes))\r\n        }\r\n        catch (e) {\r\n            dispatch(fetchNotesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteNote(id) {\r\n    return async dispatch => {\r\n        try {\r\n            await axios.delete(`${_baseUrl}/notes/${id}.json`)\r\n            dispatch(fetchNotes())\r\n        }\r\n        catch (e) {\r\n            dispatch(fetchNotesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function addNote(data) {\r\n    return async (dispatch) => {\r\n        try {\r\n            // dispatch(noteAdding())\r\n            await axios.post(`${_baseUrl}/notes.json`, data)\r\n            console.log(data)\r\n            dispatch(fetchNotes())\r\n        }\r\n        catch (e) {\r\n            dispatch(fetchNotesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function putEditNote(id, Data) {\r\n    return async dispatch => {\r\n        try {\r\n            console.log(Data)\r\n            dispatch(fetchNotesStart())\r\n            await axios.put(`${_baseUrl}/notes/${id}.json`, Data)\r\n            dispatch(fetchNotes())\r\n        } catch (e) {\r\n            dispatch(fetchNotesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function setNewColor(id, newData) {\r\n    return async dispatch => {\r\n        try {\r\n            console.log(id, newData)\r\n            dispatch(fetchNotesStart())\r\n            await axios.put(`${_baseUrl}/notes/${id}.json`, newData)\r\n            dispatch(fetchNotes())\r\n        } catch (e) {\r\n            dispatch(fetchNotesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function noteAdding() {\r\n    return {\r\n        type: ADD_NOTE\r\n    }\r\n}\r\n\r\nexport function editingModeStart() {\r\n    return {\r\n        type: EDIT_MODE_START\r\n    }\r\n}\r\n\r\nexport function editingModeFinish() {\r\n    return {\r\n        type: EDIT_MODE_FINISH\r\n    }\r\n}\r\n\r\nexport function noteDeleting() {\r\n    return {\r\n        type: DELETE_NOTE,\r\n    }\r\n}\r\n\r\nexport function fetchNotesStart() {\r\n    return {\r\n        type: FETCHING_NOTES\r\n    }\r\n}\r\n\r\nexport function fetchNotesOk(notes) {\r\n    return {\r\n        type: FETCHING_OK,\r\n        notes\r\n    }\r\n}\r\n\r\nexport function fetchNotesError(error) {\r\n    return {\r\n        type: FETCHING_ERROR,\r\n        error\r\n    }\r\n}","export const FETCHING_NOTES = \"FETCHING_NOTES\"\r\nexport const FETCHING_OK = \"FETCHING_OK\"\r\nexport const FETCHING_ERROR = \"FETCHING_ERROR\"\r\nexport const DELETE_NOTE = \"DELETE_NOTE\"\r\nexport const ADD_NOTE = \"ADD_NOTE\"\r\nexport const EDIT_MODE_START = \"EDIT_MODE_START\"\r\nexport const EDIT_MODE_FINISH = \"EDIT_MODE_FINISH\"","import React from 'react'\r\nimport './loader.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loading loadingio-spinner-ellipsis-tlkcpiie8y\"><div className=\"ldio-g59qjuet6\">\r\n        <div></div><div></div><div></div><div></div><div></div>\r\n        </div></div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useState, useEffect } from 'react'\r\nimport './OneNote.css'\r\n\r\nexport const OneNote = ({ id, note, onDelete, editingModeFinish, color, putEditNote, setNewColor }) => {\r\n    const [showColors, setShowColors] = useState(\"d-none card-text\")\r\n\r\n    function onHideColors() {\r\n        setShowColors(\"\")\r\n    }\r\n\r\n    const [colorPick, setColorPick] = useState({\r\n        color: color\r\n    })\r\n    console.log(colorPick.color)\r\n    const [editedNote, setEditedNote] = useState({\r\n        title: \"\"\r\n    })\r\n    const onNoteChange = (e) => {\r\n        setEditedNote({\r\n            title: e.target.value\r\n        })\r\n    }\r\n\r\n    const changeColor = (id, choosenColor, note) => {\r\n        const newData = {\r\n            title: note,\r\n            color: choosenColor\r\n        }\r\n        setColorPick(choosenColor)\r\n        setNewColor(id, newData)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        console.log(\"work\")\r\n        e.preventDefault()\r\n        const Data = {\r\n            title: editedNote.title,\r\n            color: colorPick.color\r\n        }\r\n        if (editedNote.title.length === 0 || editedNote.title === note) {\r\n            return\r\n        }\r\n        if (editedNote.title.length === \"\") {\r\n            onDelete()\r\n            console.log(\"Should delete\")\r\n        } else {\r\n            putEditNote(id, Data)\r\n            editingModeFinish()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    return (\r\n        <div className={color} >\r\n            <div className=\"card-header\">\r\n                <textarea className=\"card-text\"\r\n                    onChange={onNoteChange}\r\n                    defaultValue={note}\r\n                    onBlur={submitHandler}>\r\n                </textarea>\r\n                <button className=\"btn btn-primary disabled btn-sm float-right\" onClick={() => onDelete(id)}>\r\n                        <i className=\"fas fa-trash-alt\" />\r\n                </button>\r\n\r\n            </div>\r\n            <div>\r\n                {showColors === \"d-none card-text\"\r\n                    ? <i className=\"arrow fas fa-chevron-circle-down\" onClick={() => setShowColors(\"d-flex justify-content-center card-text\")} />\r\n                    : <i className=\"arrow fas fa-chevron-circle-up\" onClick={() => setShowColors(\"d-none card-text\")} />}\r\n\r\n                <div className= {showColors} >\r\n                    <i className=\"green-icon fas fa-square f0c8\" onClick={() => changeColor(id, \"card text-white bg-success mb-3\", note)} />\r\n                    <i className=\"red-icon fas fa-square f0c8\" onClick={() => changeColor(id, \"card text-white bg-primary mb-3\", note)} />\r\n                    <i className=\"grey-icon fas fa-square f0c8\" onClick={() => changeColor(id, \"card text-white bg-secondary mb-3\", note)} />\r\n                    <i className=\"orange-icon fas fa-square f0c8\" onClick={() => changeColor(id, \"card text-white bg-danger mb-3\", note)} />\r\n                    <i className=\"yellow-icon fas fa-square f0c8\" onClick={() => changeColor(id, \"card text-white bg-warning mb-3\", note)} />\r\n                    <i className=\"blue-icon fas fa-square f0c8\" onClick={() => changeColor(id, \"card text-white bg-info mb-3\", note)} />\r\n                    <i className=\"black-icon fas fa-square f0c8\" onClick={() => changeColor(id, \"card text-white bg-dark mb-3\", note)} />\r\n                    <i className=\"basic-icon far fa-square\" onClick={() => changeColor(id, \"card border-primary mb-3\", note)} />\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport './OneNoteAdder.css'\r\n\r\nexport const OneNoteAdder = ({ editingModeFinish, addNote}) => {\r\n    const[textNote, setTextNote] = useState({\r\n        title: \"\"\r\n        })\r\n\r\n    const onTitleChange = (e) => {\r\n        setTextNote({\r\n            title: e.target.value\r\n        })\r\n    }\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        const Data = {\r\n            title: textNote.title,\r\n            color: \"card border-primary mb-3\"\r\n        }\r\n        if (textNote.title.trim().length === 0) {\r\n            setTextNote({\r\n                title: \"\"\r\n            })\r\n            editingModeFinish()\r\n        } else {\r\n            addNote(Data)\r\n            editingModeFinish()\r\n            setTextNote({\r\n                title: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"card border-primary mb-3\" onSubmit = {submitHandler}>\r\n            <div className=\"card-body\">\r\n                <div className=\"card-text\">\r\n                    <textarea placeholder = \"Note it!\" \r\n                        type = \"text\"\r\n                        autoFocus = {true} \r\n                        onChange = {onTitleChange} \r\n                        value = {textNote.title} />\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-primary btn-sm float-right\" \r\n                    onClick = {submitHandler}>\r\n                    <i className=\"fas fa-check-circle\" />\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchNotes, deleteNote, addNote, editingModeStart, editingModeFinish, putEditNote, setNewColor } from '../../redux/actions/action-creators'\r\nimport Loader from './../../components/Loader/Loader'\r\nimport { OneNote } from './OneNote/OneNote'\r\nimport style from './NotesContainer.module.css'\r\nimport { OneNoteAdder } from './OneNote/OneNoteAdder/OneNoteAdder'\r\n\r\nclass NotesContainer extends React.Component {\r\n  componentDidMount = async () => {\r\n    this.props.fetchNotes()\r\n  }\r\n  adder = (\r\n    <button className=\"btn btn-primary float-left\" onClick = {this.props.editingModeStart}>\r\n      <i className=\"fas fa-plus-circle\" />\r\n    </button>\r\n  )\r\n  render() {\r\n    return (\r\n      <div className={style.notescontainer}>\r\n\r\n        {/* Add button */}\r\n        <div className=\"col-sm-3 mb-3\">\r\n          {this.props.editMode\r\n            ? <OneNoteAdder editingModeFinish = {this.props.editingModeFinish} addNote = {this.props.addNote} \r\n                notes = {this.props.notes} fetchNotes = {this.props.fetchNotes}/>\r\n            : this.adder}\r\n        </div>\r\n\r\n        {/* Notes Container if they are */}\r\n        {this.props.notes.length === 0\r\n          ? null\r\n          : this.props.loading\r\n            ? <Loader />\r\n            : this.props.notes.map((note) => (\r\n              <div className=\"col-sm-3 mb-3\" key={Math.random()}>\r\n                <OneNote key={note.id} id={note.id} note={note.title} color = {note.color} onDelete={this.props.deleteNote} \r\n                  editingModeFinish = {this.props.editingModeFinish} addNote = {this.props.addNote}\r\n                  putEditNote = {this.props.putEditNote} setNewColor = {this.props.setNewColor}/>\r\n              </div>\r\n            ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notes: state.note.notes,\r\n    loading: state.note.loading,\r\n    editMode: state.note.editMode\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchNotes: () => dispatch(fetchNotes()),\r\n    deleteNote: (id) => dispatch(deleteNote(id)),\r\n    addNote: (data) => dispatch(addNote(data)),\r\n    editingModeStart: () => dispatch(editingModeStart()),\r\n    editingModeFinish: () => dispatch(editingModeFinish()),\r\n    putEditNote: (id, Data) => dispatch(putEditNote(id, Data)),\r\n    setNewColor: (id, newData) => dispatch(setNewColor(id, newData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesContainer);\r\n","import React from 'react';\nimport './App.css';\nimport Header from './containers/header/Header';\nimport NotesContainer from './containers/NotesContainer/NotesContainer';\n\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <NotesContainer />\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { FETCHING_NOTES, FETCHING_OK, FETCHING_ERROR, DELETE_NOTE, ADD_NOTE, EDIT_MODE_FINISH, EDIT_MODE_START, EDIT_NOTE } from \"./actions/action-types\"\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    loading: false,\r\n    error: null,\r\n    editMode: false,\r\n    newNote: []\r\n}\r\nexport default function NotesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCHING_NOTES:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCHING_OK:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                notes: action.notes\r\n            }\r\n        case FETCHING_ERROR:\r\n            return {\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case DELETE_NOTE:\r\n            return {\r\n                loading: false\r\n            }\r\n        case ADD_NOTE:\r\n            return {\r\n                ...state,\r\n                newNote: {\r\n                    id: action.id,\r\n                    title: action.title\r\n                }\r\n            }\r\n\r\n        case EDIT_MODE_START:\r\n            return {\r\n                ...state,\r\n                editMode: true\r\n            }\r\n        case EDIT_MODE_FINISH:\r\n            return {\r\n                ...state,\r\n                editMode: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport notesReducer from './notesReducer'\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nexport default combineReducers({\r\n    note: notesReducer,\r\n    form: formReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootswatch/dist/journal/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk),\n);\nconst store = createStore(rootReducer, enhancer);\n\n\nconst app = (\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notescontainer\":\"NotesContainer_notescontainer__34WcL\"};"],"sourceRoot":""}